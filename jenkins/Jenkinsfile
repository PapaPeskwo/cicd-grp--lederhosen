pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    // Build the Docker image and fail the build if there are any errors
                    def buildStatus = sh(script: 'docker build --no-cache -t pingurl:latest .', returnStatus: true)
                    if (buildStatus != 0) {
                        error("Docker image build failed.")
                    }
                }
            }
        }

        stage('Lint') {
            steps {
                script {
                    // Run pylint and fail if the score is under 9.0 (we are currently at ~9.5)
                    def pylintStatus = sh(script: 'docker run --rm pingurl:latest pylint --fail-under=9.0 /backend', returnStatus: true)
                    if (pylintStatus != 0) {
                        error("Pylint score is below the threshold of 9.0")
                    }
                }
            }
        }
    }

    post {
        failure {
            echo 'The build failed.'
        }
    }
}